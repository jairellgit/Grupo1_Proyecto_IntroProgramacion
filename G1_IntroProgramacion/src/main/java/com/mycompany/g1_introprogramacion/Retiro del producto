import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import javax.swing.JOptionPane;

public class Registro {
    // Listas para almacenar productos
    private static List<Integer> id = new ArrayList<>();
    private static List<String> productos = new ArrayList<>();
    private static List<String> categorias = new ArrayList<>();
    private static List<Double> precios = new ArrayList<>();
    private static List<Integer> existencias = new ArrayList<>();
    private static List<Date> fechasCaducidad = new ArrayList<>();

    private static int contadorProductos = 1;

    // Constructor
    public Registro() {
    }

    // Getters y Setters
    public List<String> getProductos() {
        return productos;
    }

    public int getContadorProductos() {
        return contadorProductos;
    }

    private List<String> getCategorias() {
        return List.of("Frescos", "Granos", "Carnicería", "Abarrotes", "Cereales", "Limpieza", "Lácteos", "Panadería", "Hogar", "Congelados");
    }

    // Métodos
    public int registrarProducto() {
        try {
            if (contadorProductos > 100) {
                JOptionPane.showMessageDialog(null, "Se ha alcanzado el límite de productos.");
                return 0;
            }
            SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");

            String nombre = JOptionPane.showInputDialog("Nombre del producto:");
            String categoria = (String) JOptionPane.showInputDialog(null, "Categoría del producto:", "Seleccionar Categoría", JOptionPane.PLAIN_MESSAGE, null, getCategorias().toArray(), getCategorias().get(0));
            double precio = Double.parseDouble(JOptionPane.showInputDialog("Precio del producto:"));
            int existencia = Integer.parseInt(JOptionPane.showInputDialog("Existencias disponibles:"));
            String fechaCaducidadStr = JOptionPane.showInputDialog("Fecha de caducidad (DD/MM/YYYY):");
            Date fechaCaducidad = formatter.parse(fechaCaducidadStr);

            id.add(contadorProductos);
            productos.add(nombre);
            categorias.add(categoria);
            precios.add(precio);
            existencias.add(existencia);
            fechasCaducidad.add(fechaCaducidad);

            contadorProductos++;
            return contadorProductos - 1;
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Los valores ingresados no son válidos, inténtelo nuevamente.");
            return 0;
        }
    }

    public void retirarProducto() {
        try {
            int idRetirar = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el ID del producto que desea retirar:"));

            Iterator<Integer> idIterator = id.iterator();
            Iterator<String> productoIterator = productos.iterator();
            Iterator<String> categoriaIterator = categorias.iterator();
            Iterator<Double> precioIterator = precios.iterator();
            Iterator<Integer> existenciaIterator = existencias.iterator();
            Iterator<Date> fechaCaducidadIterator = fechasCaducidad.iterator();

            while (idIterator.hasNext()) {
                int idActual = idIterator.next();
                if (idActual == idRetirar) {
                    idIterator.remove();
                    productoIterator.remove();
                    categoriaIterator.remove();
                    precioIterator.remove();
                    existenciaIterator.remove();
                    fechaCaducidadIterator.remove();
                    JOptionPane.showMessageDialog(null, "Producto retirado correctamente.");
                    return;
                }
            }

            JOptionPane.showMessageDialog(null, "No se encontró un producto con ese ID.");
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Ingrese un ID válido.");
        }
    }

    public void mostrarProductos() {
        StringBuilder mensaje = new StringBuilder("Lista de Productos:\n");

        for (int i = 0; i < id.size(); i++) {
            mensaje.append("ID: ").append(id.get(i)).append(", Nombre: ").append(productos.get(i)).append(", Categoría: ").append(categorias.get(i)).append("\n");
        }

        JOptionPane.showMessageDialog(null, mensaje.toString());
    }
}
